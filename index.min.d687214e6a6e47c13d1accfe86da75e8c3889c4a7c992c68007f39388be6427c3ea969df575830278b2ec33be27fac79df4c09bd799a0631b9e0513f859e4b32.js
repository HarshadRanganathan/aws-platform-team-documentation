var suggestions=document.getElementById('suggestions'),search=document.getElementById('search');search!==null&&document.addEventListener('keydown',inputFocus);function inputFocus(a){a.ctrlKey&&a.key==='/'&&(a.preventDefault(),search.focus()),a.key==='Escape'&&(search.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(c){const d=suggestions.classList.contains('d-none');if(d)return;const a=[...suggestions.querySelectorAll('a')];if(a.length===0)return;const b=a.indexOf(document.activeElement);if(c.key==="ArrowUp"){c.preventDefault();const d=b>0?b-1:0;a[d].focus()}else if(c.key==="ArrowDown"){c.preventDefault();const d=b+1<a.length?b+1:b;a[d].focus()}}(function(){var a=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});a.add({id:0,href:"/docs/getting-started/aws-console-access/",title:"AWS Console Access",description:"Console URL # We use SAML based federated login.\n  Bookmark this console URL\n  On Successful login, select the role that you want to assume. Your permissions will vary based on the role assumed.\n  Roles # Below are the roles available.\nPlease raise request to the appropriate role that you need.\n⚠️  Only request the least privilege role that you need      Account Role Targeted Users     Non-Prod AWS_xxxxx_Read PO   Non-Prod AWS_xxxxx_Contributor Developers   Non-Prod AWS_xxxxx_Owner Infrastructure Team    Contributor Role Restrictions Following actions are denied in the contributor role:",content:"Console URL # We use SAML based federated login.\n  Bookmark this console URL\n  On Successful login, select the role that you want to assume. Your permissions will vary based on the role assumed.\n  Roles # Below are the roles available.\nPlease raise request to the appropriate role that you need.\n⚠️  Only request the least privilege role that you need      Account Role Targeted Users     Non-Prod AWS_xxxxx_Read PO   Non-Prod AWS_xxxxx_Contributor Developers   Non-Prod AWS_xxxxx_Owner Infrastructure Team    Contributor Role Restrictions Following actions are denied in the contributor role:\n❌ IAM Create/Update/Delete\n❌ RDS DB Deletion\n❌ MSK Cluster deletion\n❌ Elasticsearch deletion\n❌ EKS Deletion\n❌ EKS Upgrades\n❌ S3 bucket deletion\n❌ Lambda deletion\n❌ RDS DB Proxy deletion\n❌ Route53 deletion\n❌ VPC deletion\n❌ Security Groups deletion\n❌ Step Functions deletion\n❌ API Gateway deletion\n❌ Cloudfront deletion\n❌ WAF deletion\n❌ Cloudwatch Events deletion\n Session Timeout # When your session times out, you will get below error:\n⚠️  There was a problem with your session. To start a new session return to the link provided by your administratorTo logout, click here   Or you may re-directed to an alternative AWS customer sign-in screen.\nDo not use the customer AWS sign-in screen, instead use the SAML federated link to login again.\n"}).add({id:1,href:"/docs/getting-started/aws-cli-access/",title:"AWS CLI Access",description:"Installation #  Python Virtualenv AWS CLI  ",content:"Installation #  Python Virtualenv AWS CLI  "}).add({id:2,href:"/docs/getting-started/terraform/guidelines/",title:"Terraform",description:"Terraform is used to allow users to easily and repeatably create resources.\nCreation of resources should not be done manually as this leaves a risk that they will not be repeatable should there be a failure or accidental deletion\nTags # We require below tags to be set for resources as it\u0026rsquo;ll help with easier tracing and cost tracking.\n   Tag Key Tag Value Purpose     Name  Useful name to identify individual resources   Application ID  Identify resources that are related to a specific application   Namespace/Application Role  Resource group/Describe the function of a particular resource (such as web server, message broker, database)   Stage alpha/stage/prod Distinguish between development, test, and production resources   ManagedBy terraform Indicates the process that manages the resource   TF Repo https://github.",content:"Terraform is used to allow users to easily and repeatably create resources.\nCreation of resources should not be done manually as this leaves a risk that they will not be repeatable should there be a failure or accidental deletion\nTags # We require below tags to be set for resources as it\u0026rsquo;ll help with easier tracing and cost tracking.\n   Tag Key Tag Value Purpose     Name  Useful name to identify individual resources   Application ID  Identify resources that are related to a specific application   Namespace/Application Role  Resource group/Describe the function of a particular resource (such as web server, message broker, database)   Stage alpha/stage/prod Distinguish between development, test, and production resources   ManagedBy terraform Indicates the process that manages the resource   TF Repo https://github.com/ TF Repository which was used to create the resource   Team Infra Platform Team which created the resource   Owner Infra Platform Identify who is responsible for the resource   Owner DL team@example.com DL for issues/notifications related to the resource   Cost Center  Identify the cost center or business unit associated with a resource, typically for cost allocation and tracking   Confidentiality Sensitive An identifier for the specific data confidentiality level a resource supports    "}).add({id:3,href:"/docs/getting-started/best-practices/",title:"Best Practices",description:"",content:""}).add({id:4,href:"/docs/getting-started/helm/",title:"Helm",description:"What is Helm? # Helm is a tool for deploying reusable components to Kubernetes clusters. The introduction to Helm is a good starting point for working with Helm\nInstallation # Helm Repo Structure # Typical helm repo will have below structure -\n. |____environments # Configuration for the environments | |____shared | | |____shared-values.yaml # Shared values to be used across all environments | |____stage # configuration for Stage | | |____stage-values.",content:"What is Helm? # Helm is a tool for deploying reusable components to Kubernetes clusters. The introduction to Helm is a good starting point for working with Helm\nInstallation # Helm Repo Structure # Typical helm repo will have below structure -\n. |____environments # Configuration for the environments | |____shared | | |____shared-values.yaml # Shared values to be used across all environments | |____stage # configuration for Stage | | |____stage-values.yaml | |____alpha | | |____alpha-values.yaml |____Chart.yaml # Defines Chart metadata and versions. Update versions using semantic versioning |____.helmignore # Helm file for if the chart is packaged into a zip not always required |____README.md # Containing information about how to apply the chart and what the configurable values do |____templates # A folder containing the kuberentes mainfests that will be configured with passed values # Structure can be unique to chart. Changes here impact the logic of the chart | |____deployment.yaml # example file | |____'_helpers.tpl' # without quotes. Contains variable transformations for convenience in the other templates | |____NOTES.txt # Defines output to console as chart is deployed |____values.yaml # Defines default values that came from the original chart generally you should not change these as it can have a wide impact  Useful Commands # List the helm deployments -\nhelm list  Upgrade helm chart -\nhelm upgrade -i [release-name] [path-to-chart.yaml/.] -n [deploy-namespace] --values=environments/shared/shared-values.yaml --values=environments/alpha/[env-name]-values.yaml  "}).add({id:5,href:"/docs/getting-started/github-guidelines/",title:"Github Guidelines",description:"Git Flow #  Clone the repository to your local If you had already cloned the repo, pull the latest changes from master/main branch Create a new branch Do your changes Regularly commit and push your changes to remote branch Once you are done with your changes, raise PR and assign reviewers Address any review comments After the PR is approved, merge your changes to master/main  Access # If you are getting any access issues as shown below when trying to create a branch/push to the repository, please reach out to your team lead to get the required access.",content:"Git Flow #  Clone the repository to your local If you had already cloned the repo, pull the latest changes from master/main branch Create a new branch Do your changes Regularly commit and push your changes to remote branch Once you are done with your changes, raise PR and assign reviewers Address any review comments After the PR is approved, merge your changes to master/main  Access # If you are getting any access issues as shown below when trying to create a branch/push to the repository, please reach out to your team lead to get the required access.\n⚠️  Please make sure you have correct access rights and the repository exists   Branching # Once your PR is merged, please delete the branch to keep the repository clean.\nPR # "}).add({id:6,href:"/docs/getting-started/web-tools/",title:"Web Tools",description:"",content:""}).add({id:7,href:"/docs/getting-started/recordings/",title:"Recordings",description:"Recorded sessions on Architecture Overview, KT\u0026rsquo;s and other topics are available below:",content:"Recorded sessions on Architecture Overview, KT\u0026rsquo;s and other topics are available below:\n"}).add({id:8,href:"/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener('input',b,!0);function b(){var b,e;const d=5;b=this.value,e=a.search(b,{limit:d,enrich:!0});const c=new Map;for(const a of e.flatMap(a=>a.result)){if(c.has(a.doc.href))continue;c.set(a.doc.href,a.doc)}if(suggestions.innerHTML="",suggestions.classList.remove('d-none'),c.size===0&&b){const a=document.createElement('div');a.innerHTML=`No results for "<strong>${b}</strong>"`,a.classList.add("suggestion__no-results"),suggestions.appendChild(a);return}for(const[h,g]of c){const b=document.createElement('div');suggestions.appendChild(b);const a=document.createElement('a');a.href=h,b.appendChild(a);const e=document.createElement('span');e.textContent=g.title,e.classList.add("suggestion__title"),a.appendChild(e);const f=document.createElement('span');if(f.textContent=g.description,f.classList.add("suggestion__description"),a.appendChild(f),suggestions.appendChild(b),suggestions.childElementCount==d)break}}})()